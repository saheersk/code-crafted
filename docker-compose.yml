version: "3.8"

services:
  postgres_user_service:
    image: postgres:16
    container_name: postgres_user_service_container
    environment:
        POSTGRES_DB: user_service_db
        POSTGRES_USER: user_service
        POSTGRES_PASSWORD: user_service123
    volumes:
        - postgres_user_service_data:/var/lib/postgresql/data

  kong-database:
    image: postgres:latest
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"  # Expose PostgreSQL port

  kong:
    image: kong:latest
    ports:
      - "8000:8000"   # Kong Proxy
      - "8443:8443"   # Kong Proxy (HTTPS)
      - "8001:8001"   # Kong Admin API
      - "8444:8444"   # Kong Admin API (HTTPS)
    environment:
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    command: kong start --vv

  redis:
    image: redis:latest
    container_name: user-redis
    ports:
        - "6379:6379"

  user_service:
    build:
        context: ./backend/user_service
        dockerfile: Dockerfile
    image: backend:user-service
    container_name: user-service
    command: sh -c "chmod +x ./migrate.sh && chmod +x ./entrypoint.sh && sh ./migrate.sh && ./entrypoint.sh"
    ports:
        - 8005:8000
    env_file:
        - ./backend/user_service/.env
    volumes:
        - ./backend/user_service:/code-user-service
    depends_on:
        - postgres_user_service
        - redis

  user_celery_worker:
    restart: always
    build:
      context: ./backend/user_service
    env_file:
      - ./backend/user_service/.env
    container_name: user-celery-worker
    command: celery -A user_service worker --loglevel=info
    volumes:
      - ./backend/user_service:/code-user-service
    depends_on:
      - postgres_user_service
      - redis

volumes:
    postgres_user_service_data:
